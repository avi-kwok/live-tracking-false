<!-- header -->
<%- include('include/_header') %>

<!-- redirecting buttons -->
<main id="site-main">
    <div class="container">
        
        <div class="box-nav d-flex justify-between">
            
            <a href="/" class="border-shadow">
                <span class="text-gradient">Player List <i class="fas fa-user"></i></span>
            </a>
            <a id="leaderboardButton" href="/leaderboard" class="border-shadow">
                <span class="text-gradient">Leaderboard <i class="fas fa-star"></i></span>
            </a>
            <a href="/match-history" class="border-shadow">
                <span class="text-gradient">Match History <i class="fas fa-futbol"></i></span>                
            </a>
        </div>


        <!-- table + buttons and data -->
        <form action="/" method="POST">
            <table class="table">
                <thead class="thead-dark">
                    <tr>
                        <th><button type='button' onclick="sortTable(0)" class="btn" id="sortButton0">Name</button></th>
                        <th><button type='button' onclick="sortTable(1)" class="btn" id="sortButton1">Position</button></th>
                        <th><button type='button' onclick="sortTable(2)" class="btn" id="sortButton2">Points</button></th>
                        <th><button type='button' onclick="sortTable(3)" class="btn" id="sortButton3">Assists</button></th>
                        <th><button type='button' onclick="sortTable(4)" class="btn" id="sortButton4">TO</button></th>
                        <th><button type='button' onclick="sortTable(5)" class="btn" id="sortButton5">Blocks</button></th>
                        <th><button type='button' onclick="sortTable(6)" class="btn" id="sortButton6">Points Played</button></th>
                        <th><button type='button' onclick="sortTable(7)" class="btn" id="sortButton7">Points per Point </button></th>
                        <th><button type='button' onclick="sortTable(8)" class="btn" id="sortButton8">Assists per Point</button></th>
                        <th><button type='button' onclick="sortTable(9)" class="btn" id="sortButton9">Turnovers per Point</button></th>
                        <th><button type='button' onclick="sortTable(10)" class="btn" id="sortButton10">Blocks per Point</button></th>
                        <th><button type='button' onclick="sortTable(11)" class="btn" id="sortButton11">Player Rating</button></th>
                    </tr>
                </thead>
                
                <tbody>
                    <% for(var i = 0; i < users.length; i++) { %>
                        <tr>
                            <td><%= users[i].name %></td>
                            <td><%= users[i].position %></td>
                            <td><%= users[i].points %></td>
                            <td><%= users[i].assists %></td>
                            <td><%= users[i].turnovers %></td>
                            <td><%= users[i].blocks %></td>
                            <td><%= users[i].pointsPlayed %></td>
                            <% if (Number.isNaN(users[i].points/users[i].pointsPlayed)) { %>
                                <td>0</td>
                            <% } else { %>
                                <td><%= parseFloat(users[i].points/users[i].pointsPlayed).toFixed(2)%></td><% } %>
                            <% if (Number.isNaN(users[i].assists/users[i].pointsPlayed)) { %>
                                <td>0</td>
                            <% } else { %>
                                <td><%= parseFloat(users[i].assists/users[i].pointsPlayed).toFixed(2)%></td><% } %>
                            <% if (Number.isNaN(users[i].turnovers/users[i].pointsPlayed)) { %>
                                <td>0</td>
                            <% } else { %>
                                <td><%= parseFloat(users[i].turnovers/users[i].pointsPlayed).toFixed(2)%></td><% } %>
                            <% if (Number.isNaN(users[i].blocks/users[i].pointsPlayed)) { %>
                                <td>0</td>
                            <% } else { %>
                                <td><%= parseFloat(users[i].blocks/users[i].pointsPlayed).toFixed(2)%></td> <% } %>
                            <% if (Number.isNaN(users[i].blocks/users[i].pointsPlayed)) { %>
                                <td>0</td>
                            <% } else { %>
                                <td><%= parseFloat((users[i].points+users[i].assists+users[i].blocks+users[i].turnovers)/users[i].pointsPlayed).toFixed(2)%></td> <% } %>
                        </tr>
                    <% } %>
                </tbody>
                <th><button type='button' onclick="resetSort()" class="btn">Reset</button></th>
            </table>
        </form>
    </div>
</main>



<script>
    //deactivate leaderboard button
    document.addEventListener('DOMContentLoaded', function() {
        try {
            const path = window.location.pathname;
            const leaderboardButton = document.getElementById('leaderboardButton');
            
            if (path.includes('/leaderboard')) {
                leaderboardButton.classList.add('deactivated');
            }
        } catch (error) {
            console.error('Error in script:', error);
        }
    });
    console.log('skfdjsfdsfdslfdsfjdslf')


    //sorting function
    function sortTable(column) {
        const table = document.querySelector('.table');
        const tbody = table.querySelector('tbody');
        const rows = Array.from(tbody.querySelectorAll('tr'));

        const columnIndex = column;
        const columnButton = table.querySelector(`#sortButton${columnIndex}`);
        const columnHeader = columnButton.closest('th');

        rows.sort((a, b) => {
            const aValue = a.children[columnIndex].innerText;
            const bValue = b.children[columnIndex].innerText;

            //for alphabetical sort in reverse
            if (columnIndex === 0 || columnIndex === 1) {
                return aValue.localeCompare(bValue, undefined, { numeric: true, sensitivity: 'base' });
            } else {
                return aValue.localeCompare(bValue, undefined, { numeric: true, sensitivity: 'base' });
            }
        });

        if (columnIndex === 0 || columnIndex === 1)  {
            rows.reverse(); //reverse one more time to sort in alphabetical order
        }

        rows.reverse();

        // reappend the rows to the table
        rows.forEach(row => tbody.appendChild(row));

        // remove highlight from all buttons
        const buttons = table.querySelectorAll('.btn');
        buttons.forEach(button => button.classList.remove('sorted'));

        // remove highlight from all th elements
        const headers = table.querySelectorAll('thead th');
        headers.forEach(header => header.classList.remove('sorted'));

        // add highlight to the pressed button
        columnButton.classList.add('sorted');

        // add highlight to the pressed column header
        columnHeader.classList.add('sorted');
    }


    //reset by reloading page
    function resetSort() { 
        window.location.reload();
    }
</script>

<style>
    #leaderboardButton {
        margin-left: 25px;
    }
</style>

<%- include('include/_footer') %>
